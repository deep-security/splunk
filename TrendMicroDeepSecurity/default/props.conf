# Copyright 2018, Trend Micro

[deepsecurity]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom,deepsecurity-icmp
TRANSFORMS-ipsevents = deepsecurity-intrusion_prevention
TRANSFORMS-fwevents = deepsecurity-firewall
TRANSFORMS-antimalware = deepsecurity-antimalware
TRANSFORMS-system_events = deepsecurity-system_events
TRANSFORMS-integrity_monitoring = deepsecurity-integrity_monitoring
TRANSFORMS-log_inspection = deepsecurity-log_inspection
TRANSFORMS-web_reputation = deepsecurity-web_reputation
TRANSFORMS-app_control = deepsecurity-app_control
KV_MODE = none

[deepsecurity-firewall]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom,deepsecurity-icmp
FIELDALIAS-Deep Security Firewall Field Aliases = TCP_Flags AS tcp_flag dmac AS dest_mac cef_rulename AS rule cef_ruleid AS rule_id dst AS dest_ip dpt AS dest_port dvchost AS dvc proto AS transport in AS bytes_in out AS bytes_out smac AS src_mac src AS src_ip spt AS src_port TrendMicroDsFrameType AS protocol cef_vendor AS vendor cef_product AS product
# This transform won't be necessary in version 1.6
TRANSFORMS-changesourcetype = deepsecurity-intrusion_prevention
EVAL-action = case(act == "Deny", "blocked", act == "IDS:Deny", "allowed", act == "Log", "allowed")
EVAL-direction = case(in > 0, "inbound", out > 0, "outbound", 1=1, "unknown")
KV_MODE = none

[deepsecurity-intrusion_prevention]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
FIELDALIAS-Deep Security Intrusion Prevention Field Aliases = TCP_Flags AS tcp_flag act AS action dmac AS dest_mac dst AS dest_ip dpt AS dest_port dvchost AS dvc proto AS transport in AS bytes_in out AS bytes_out smac AS src_mac src AS src_ip spt AS src_port TrendMicroDsFrameType AS protocol cef_rulename AS signature dst AS dest cef_vendor AS vendor cef_product AS product cef_ruleid AS rule_id
EVAL-direction = case(in > 0, "inbound", out > 0, "outbound", 1=1, "unknown")
EVAL-severity = case(cef_severity = 3, "low", cef_severity = 6, "medium", cef_severity = 8, "high", cef_severity = 10, "critical")
EVAL-ids_type = case(1=1, "host")
KV_MODE = none

[deepsecurity-system_events]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security System Field Aliases = cef_vendor AS vendor cef_product AS product cef_ruleid AS rule_id
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
KV_MODE = none

[deepsecurity-antimalware]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security Anti-Malware Field Aliases = cef_vendor AS vendor cef_product AS product dvchost as dest cef_rulename as signature filePath as file_path cef_ruleid AS rule_id
EVAL-action = case(act == "Quarantine", "blocked", act == "Delete", "blocked", act == "Clean", "blocked", act == "DenyAccess", "blocked", act == "Pass", "allowed", 1=1, "unknown")
EVAL-file_name = mvindex(split(filePath,"\\"),-1)
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
KV_MODE = none

[deepsecurity-log_inspection]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security Log Inspection Field Aliases = cef_vendor AS vendor cef_product AS product cef_ruleid AS rule_id cef_rulename AS signature LI_Description AS description
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
EVAL-severity = case(cef_severity=3, "low", cef_severity=6, "medium", cef_severity=8, "high", cef_severity=10, "critical")
KV_MODE = none

[deepsecurity-integrity_monitoring]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security Integrity Monitoring Field Aliases = cef_vendor AS vendor cef_product AS product dvchost AS dvc cef_rulename AS change_type cef_ruleid AS rule_id
EVAL-action = case(act == "created", "created", act == "deleted", "deleted", act == "renamed", "modified", act == "updated", "modified")
EVAL-severity = case(cef_severity=3, "low", cef_severity=6, "medium", cef_severity=8, "high", cef_severity=10, "critical")
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
KV_MODE = none

[deepsecurity-web_reputation]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security Web Reputation Field Aliases = cef_vendor AS vendor cef_product AS product request AS url dvchost AS src act AS action cef_ruleid AS rule_id
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
KV_MODE = none

[deepsecurity-app_control]
NO_BINARY_CHECK = 1
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-Deep Security Application Control Aliases = cef_vendor AS vendor cef_product AS product dvchost AS src act AS action cef_ruleid AS rule_id cef_rulename AS signature
REPORT-cefevents = deepsecurity-cefheaders,deepsecurity-cefkeys,deepsecurity-cefcustom
KV_MODE = none

[deepsecurity:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
description = Sourcetype for Trend Micro data in JSON format received via SNS and Kinesis Firehose
category = Structured
INDEXED_EXTRACTIONS = json
TIMESTAMP_FIELDS = LogDate
TRANSFORMS-dvchost_json = deepsecurity-hostname_json
TRANSFORMS-ipsevents_json = deepsecurity-intrusion_prevention_json
TRANSFORMS-fwevents_json = deepsecurity-firewall_json
TRANSFORMS-antimalware_json = deepsecurity-antimalware_json
TRANSFORMS-system_events_json = deepsecurity-system_events_json
TRANSFORMS-integrity_monitoring_json = deepsecurity-integrity_monitoring_json
TRANSFORMS-log_inspection_json = deepsecurity-log_inspection_json
TRANSFORMS-web_reputation_json = deepsecurity-web_reputation_json
TRANSFORMS-app_control_json = deepsecurity-app_control_json
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-firewall:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_firewall_aliases = Flags AS tcp_flag Reason AS rule DestinationMAC AS dest_mac DestinationIP AS dest_ip DestinationPort AS dest_port DestinationIP AS dest PacketSize AS bytes SourceMAC AS src_mac SourceIP AS src_ip SourcePort AS src_port SourceIP AS src Hostname AS dvchost
EVAL-action = case(ActionString == "Deny", "blocked", 1=1, "allowed")
EVAL-direction = case(DirectionString = "Incoming", "inbound", DirectionString = "Outgoing", "outbound", 1=1, "unknown")
EVAL-transport = case(ProtocolString = "ICMP", "icmp", ProtocolString = "ICMPV6", "icmp", ProtocolString = "TCP", "tcp", ProtocolString = "UDP", "udp")
EVAL-bytes_in = case(DirectionString = "Incoming", PacketSize)
EVAL-bytes_out = case(DirectionString = "Outgoing", PacketSize)
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-intrusion_prevention:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_intrusion_prevention_aliases = Flags AS tcp_flag DestinationMAC AS dest_mac DestinationIP AS dest_ip DestinationPort AS dest_port SourceMAC AS src_mac SourceIP AS src_ip SourcePort AS src_port DestinationIP AS dest SourceIP AS src Reason AS signature ApplicationType AS category IPDatagramLength AS bytes Hostname AS dvchost
EVAL-direction = case(DirectionString = "Incoming", "inbound", DirectionString = "Outgoing", "outbound", 1=1, "unknown")
EVAL-severity = case(Severity = 1, "low", Severity = 2, "medium", Severity = 3, "high", Severity = 4, "critical")
EVAL-action = case(ActionString = "Deny", "blocked", ActionString = "Reset", "blocked", ActionString = "Log Only", "allowed", ActionString = "Detect Only: Deny", "allowed", ActionString = "Detect Only: Reset", "allowed", ActionString = "Detect Only: Insert", "allowed", ActionString = "Detect Only: Delete", "allowed", ActionString = "Detect Only: Replace", "allowed", ActionString = "Delete", "blocked", ActionString = "Replace", "blocked", ActionString = "Insert", "blocked", 1=1, "unknown")
EVAL-ids_type = "host"
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
EVAL-bytes_in = case(DirectionString = "Incoming", IPDatagramLength)
EVAL-bytes_out = case(DirectionString = "Outgoing", IPDatagramLength)
EVAL-transport = lower(ProtocolString)
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-system_events:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_system_events_aliases = ActionBy AS user TargetName AS dest Title AS signature
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-antimalware:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_antimalware_aliases = MajorVirusTypeString AS category host AS dest LogDate AS date MalwareName AS signature InfectedFilePath AS file_path FileSHA1 AS file_hash HostAgentVersion AS product_version Hostname AS dvchost
EVAL-action = case(ScanResultString == "Quarantined", "blocked", ScanResultString == "Deleted", "blocked", ScanResultString == "Cleaned", "blocked", ScanResultString == "Access Denied", "blocked", ScanResultString == "Passed", "allowed", ScanResultString == "Clean Failed", "deferred", ScanResultString == "Delete Failed", "deferred", ScanResultString == "Quarantine Failed", "deferred", 1=1, "unknown")
EXTRACT-antimalware_file_name = (?<file_name>[^\\|\/]*$) in InfectedFilePath
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-log_inspection:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_log_inspection_aliases = host AS dest Reason AS signature Hostname AS dvchost OSSEC_Description AS description
EXTRACT-log_inspection_severity = (?<severity>^\w+) in SeverityString
EVAL-severity = lower(severity)
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-integrity_monitoring:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_integrity_monitoring_aliases = Reason AS change_type User AS user User AS src_user User AS user_name HostGUID AS object_id EntityType AS object_category Key AS object Hostname AS dvchost
EVAL-action = case(ChangeString == "Created", "created", ChangeString == "Deleted", "deleted", ChangeString == "Renamed", "modified", ChangeString == "Updated", "modified")
EVAL-severity = case(Severity = 1, "low", Severity = 2, "medium", Severity = 3, "high", Severity = 4, "critical")
EXTRACT-integrity_monitoring_object = ^(?<object>.+?)(?=;|$| \-\>) in Key
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
EVAL-status = "success"
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-web_reputation:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_web_reputation_aliases = URL AS url host AS src Hostname AS dvchost RiskString AS msg TargetIP AS dest_ip
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false

[deepsecurity-app_control:json]
NO_BINARY_CHECK = true
SHOULD_LINEMERGE = false
pulldown_type = 1
FIELDALIAS-trend_micro_app_control_aliases = host AS src Action AS signature Hostname AS dvchost Reason AS signature FileName AS object SHA1 AS file_hash OperationDesc AS action UserName AS user
EVAL-vendor = "Trend Micro"
EVAL-product = "Deep Security " + OriginString
EVAL-vendor_product = "Trend Micro Deep Security " + OriginString
KV_MODE = none
AUTO_KV_JSON = false
